name: Release

on:
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    # Skip runs on any chore commit (incl. the sync commit "chore(release): â€¦")
    if: ${{ !(github.event_name == 'push' && (startsWith(github.event.head_commit.message, 'chore(') || startsWith(github.event.head_commit.message, 'chore:') || startsWith(github.event.head_commit.message, 'chore '))) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: npm

      - run: npm ci
        env:
          HUSKY: 0

      # semantic-release: publishes to npm, creates GH release, updates/creates CHANGELOG.md
      - name: Semantic Release
        id: sr
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Persist the released version into package.json so the sync PR always has a diff
      - name: Sync package.json version to released version
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          node -e "
            const fs = require('fs');
            const f = 'package.json';
            const j = JSON.parse(fs.readFileSync(f, 'utf8'));
            j.version = '${{ steps.sr.outputs.new_release_version }}';
            fs.writeFileSync(f, JSON.stringify(j, null, 2) + '\n');
          "
        env:
          HUSKY: 0

      - name: Refresh lockfile after bump
        if: steps.sr.outputs.new_release_published == 'true'
        run: npm install --package-lock-only
        env:
          HUSKY: 0

      # Avoid Husky / git hooks from modifying files during the PR commit
      - name: Disable git hooks (avoid Husky in PR commit)
        if: steps.sr.outputs.new_release_published == 'true'
        run: git config --global core.hooksPath /dev/null

      # Sanity: show what changed (useful if PR step no-ops)
      - name: Debug diff
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          git status
          git --no-pager diff --name-only

      - name: Build PR body from release notes
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          {
            echo "Files generated by semantic-release (version bump & changelog)."
            echo
            echo "### Release notes for v${{ steps.sr.outputs.new_release_version }}"
            echo
            echo "${{ steps.sr.outputs.new_release_notes }}"
          } > PR_BODY.md

      - name: Open/Update sync PR (package.json + lockfile + CHANGELOG.md)
        if: steps.sr.outputs.new_release_published == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v7
        env:
          HUSKY: 0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: chore/sync-release-files
          title: 'chore(release): v${{ steps.sr.outputs.new_release_version }}'
          commit-message: 'chore(release): v${{ steps.sr.outputs.new_release_version }}'
          body-path: PR_BODY.md
          add-paths: |
            package.json
            package-lock.json
            CHANGELOG.md
          committer: GitHub <noreply@github.com>
          author: GitHub Actions <actions@github.com>
          signoff: true
          delete-branch: true
          labels: |
            chore
            release

      - name: Enable auto-merge for sync PR
        if: steps.sr.outputs.new_release_published == 'true' && steps.cpr.outputs.pull-request-operation != 'none'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
