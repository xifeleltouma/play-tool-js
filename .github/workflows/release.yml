name: Release

on:
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    # Skip runs on any chore commit (incl. the sync commit "chore(release): …")
    if: ${{ !(github.event_name == 'push' && (startsWith(github.event.head_commit.message, 'chore(') || startsWith(github.event.head_commit.message, 'chore:') || startsWith(github.event.head_commit.message, 'chore '))) }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          cache: npm

      - run: npm ci

      # semantic-release: publishes to npm, creates GH release, updates/creates CHANGELOG.md
      - name: Semantic Release
        id: sr
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0 # ensure npm lifecycle hooks don’t run

      # Persist the released version into package.json so the sync PR always has a diff
      - name: Sync package.json version to released version
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          node -e "
            const fs = require('fs');
            const f = 'package.json';
            const j = JSON.parse(fs.readFileSync(f, 'utf8'));
            j.version = '${{ steps.sr.outputs.new_release_version }}';
            fs.writeFileSync(f, JSON.stringify(j, null, 2) + '\n');
          "

      # Refresh lockfile after bump so it's consistent with the new version field
      - name: Refresh lockfile after bump
        if: steps.sr.outputs.new_release_published == 'true'
        run: npm install --package-lock-only
        env:
          HUSKY: 0

      # Don’t let git hooks (e.g., Husky pre-commit) mutate files during the PR commit
      - name: Disable git hooks for the commit
        if: steps.sr.outputs.new_release_published == 'true'
        run: git config --global core.hooksPath /dev/null

      # Sanity: show what changed (useful if PR step no-ops)
      - name: Debug diff
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          git status
          git --no-pager diff --name-only

      - name: Open/Update sync PR (commit all changed files)
        if: steps.sr.outputs.new_release_published == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v7
        env:
          HUSKY: 0 # ensure hooks don’t run on the git commit
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: chore/sync-release-files
          title: 'chore(release): v${{ steps.sr.outputs.new_release_version }}'
          commit-message: 'chore(release): v${{ steps.sr.outputs.new_release_version }}'
          body: |
            Files generated by semantic-release (version bump & changelog).

            ### Release notes for v${{ steps.sr.outputs.new_release_version }}

            ${{ steps.sr.outputs.new_release_notes }}
          path: .
          committer: GitHub <noreply@github.com>
          author: GitHub Actions <actions@github.com>
          signoff: true
          delete-branch: true
          labels: |
            chore
            release

      - name: Show PR step outputs
        if: steps.sr.outputs.new_release_published == 'true'
        run: |
          echo "operation=${{ steps.cpr.outputs.pull-request-operation }}"
          echo "number=${{ steps.cpr.outputs.pull-request-number }}"
          echo "url=${{ steps.cpr.outputs.pull-request-url }}"
